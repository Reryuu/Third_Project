@model project3.Models.applicant

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    Applicant
}

@section scripts{
    <script>
        const textarea = document.querySelectorAll("textarea");
        textarea.forEach(function (Item) {
            Item.addEventListener("keyup", e => {
                Item.style.height = "63px";
                let scHeight = e.target.scrollHeight;
                Item.style.height = `${scHeight}px`;
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval");
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a href="/Admin/Home/Index">Trang chủ</a>/ Nhập thông tin người dùng.
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-9">
                        @using (Html.BeginForm("Create", "applicants", FormMethod.Post, new { enctype = "multipart/form-data"}))
                        {
                            @Html.AntiForgeryToken()
                            <h3 style="font-weight:600;color:cornflowerblue;font-family:sans-serif">Personal Information</h3>
                            <div class="form-horizontal">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.display_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.display_name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.display_name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.image, new { htmlAttributes = new { @type = "file", @id = "file" } })
                                        <div id="preview" style="margin:1.5%;border-radius:3px"></div>
                                        <script type="text/javascript">
                                            function previewImages() {
                                                var preview = document.querySelector('#preview');
                                                if (document.querySelector('#preview').childElementCount > 0) preview.removeChild(preview.childNodes[0])
                                                if (this.files) {
                                                    [].forEach.call(this.files, readAndPreview);
                                                }
                                                function readAndPreview(file) {
                                                    var reader = new FileReader();
                                                    reader.addEventListener("load", function () {
                                                        var image = new Image();
                                                        image.height = 100;
                                                        image.title = file.name;
                                                        image.src = this.result;
                                                        preview.appendChild(image);
                                                    });
                                                    reader.readAsDataURL(file);
                                                }
                                            }
                                            document.querySelector('#file').addEventListener("change", previewImages);
                                        </script>
                                        @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <hr />
                                <h3 style="font-weight:600;color:cornflowerblue;font-family:sans-serif">Detail Information</h3>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.target, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.target, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.target, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.education, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.education, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.experience, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.experience, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.experience, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.skills, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.skills, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.skills, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p class="btn btn-default">
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>

