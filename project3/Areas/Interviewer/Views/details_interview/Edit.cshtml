@model project3.Models.details_interview
@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Interviewer/Views/Shared/_Layout.cshtml";
}

@section header{
    Edit Interview
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a href="/Admin/Home/Index">Trang chủ</a>/ Kết quả buổi phóng vấn.
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-10">
                        @using (Html.BeginForm("Edit", "details_interview", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.id)

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.applicant.display_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.applicantId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.applicantId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <input name="apl" hidden value=@ViewBag.applicantId />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.vacancy.title, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.vacancy.title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.vacancy.title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <input name="vac" hidden value=@ViewBag.vacancyId />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.employee.display_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employee.display_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.employee.display_name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <input name="emp" hidden value=@ViewBag.employeeId />*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.applicantId, "applicantId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("applicantId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.applicantId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.vacancyId, "vacancyId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("vacancyId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.vacancyId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.employeeId, "employeeId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("employeeId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.employeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.time, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @style = "width : auto;", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.status, new List<SelectListItem> {
                                            new SelectListItem { Value = "Selected",Text="Selected" },
                                            new SelectListItem { Value = "Rejected",Text="Rejected" },
                                            }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Update" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p class="btn btn-default">
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>

